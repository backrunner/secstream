import fs from 'node:fs';
import path from 'node:path';

const ROOT = path.resolve(new URL('.', import.meta.url).pathname, '..');
const WORKER_ROOT = path.resolve(ROOT, '..');

const BUCKET_NAME = process.env.BUCKET_NAME;
const KEY_PREFIX = process.env.KEY_PREFIX || '';
const ALLOWED_ORIGINS = process.env.ALLOWED_ORIGINS || '';

if (!BUCKET_NAME) {
  const msg = [
    '[secstream-worker] Missing BUCKET_NAME.',
    'Set BUCKET_NAME env var and re-run. Optionally set KEY_PREFIX.',
    'Example: BUCKET_NAME=my-audio-bucket KEY_PREFIX=music pnpm -w --filter secstream-worker dev',
  ].join('\n');
  console.error(msg);
  process.exit(1);
}

const varsBlock = [
  '# Optional. When set, all object keys are resolved relative to this prefix.',
  `KEY_PREFIX = "${KEY_PREFIX}"`,
  ...(ALLOWED_ORIGINS ? [`ALLOWED_ORIGINS = "${ALLOWED_ORIGINS}"`] : [
    '# Optional. Comma-separated list of allowed origins.',
    '# ALLOWED_ORIGINS = "https://your-app.com"'
  ])
].join('\n');

const wranglerToml = `# Generated by scripts/configure.mjs. Do not edit by hand.\n\nname = "secstream-worker"\nmain = "worker.ts"\ncompatibility_date = "2024-06-13"\n\n[[r2_buckets]]\n# Binding name must match Env.AUDIO_BUCKET in code\nbinding = "AUDIO_BUCKET"\nbucket_name = "${BUCKET_NAME}"\n\n[vars]\n${varsBlock}\n`;

const outPath = path.resolve(WORKER_ROOT, 'wrangler.toml');
fs.writeFileSync(outPath, wranglerToml);
console.log(`[secstream-worker] Wrote ${outPath}`);
